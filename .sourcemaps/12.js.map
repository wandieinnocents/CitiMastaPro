{"version":3,"sources":["../../src/pages/loginverfy/loginverfy.module.ts","../../src/pages/loginverfy/loginverfy.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACF;AAU9C,IAAa,oBAAoB;IAAjC;IAAmC,CAAC;IAAD,2BAAC;AAAD,CAAC;AAAvB,oBAAoB;IARhC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,mEAAc;SACf;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,mEAAc,CAAC;SACzC;KACF,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACgC;AAE1E,kCAAkC;AACE;AAEpC;;;;;GAKG;AAOH,IAAa,cAAc;IAKzB,wBAAmB,OAAsB,EAChC,SAAyB,EACxB,SAAoB;QAFX,YAAO,GAAP,OAAO,CAAe;QAChC,cAAS,GAAT,SAAS,CAAgB;QACxB,cAAS,GAAT,SAAS,CAAW;IAC9B,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,8CAAa,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,CAAC;QAEpF,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC/C,CAAC;IACD,6BAA6B;IAC7B,+BAAM,GAAN,UAAO,WAAmB;QAA1B,iBAoCC;QAlCC,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC3C,IAAM,iBAAiB,GAAG,GAAG,GAAG,WAAW,CAAC;QAC5C,8CAAa,EAAE,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,WAAW,CAAC;aAClE,IAAI,CAAE,4BAAkB;YACvB,yEAAyE;YACzE,iDAAiD;YACjD,IAAI,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACnC,KAAK,EAAE,6BAA6B;gBACpC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,WAAW,EAAE,mBAAmB,EAAE,CAAC;gBACxE,OAAO,EAAE;oBACP,EAAE,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,cAAI,IAAM,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;qBACpD;oBACD,EAAE,IAAI,EAAE,MAAM;wBACZ,OAAO,EAAE,cAAI;4BACX,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC;iCAC9C,IAAI,CAAC,UAAU,MAAM;gCACpB,+BAA+B;gCAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gCACzB,MAAM;4BACR,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK;gCACtB,iDAAiD;gCACjD,MAAM;4BACR,CAAC,CAAC,CAAC;wBACP,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,KAAK;YACpB,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IAEL,CAAC;IAEH,qBAAC;AAAD,CAAC;AAtDY,cAAc;IAJ1B,wEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;OACG;KAC/B,CAAC;+EAMyC;QACtB,kEAAe;QACb,SAAS;AA+C/B;SAtDY,cAAc,e","file":"12.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginverfyPage } from './loginverfy';\n\n@NgModule({\n  declarations: [\n    LoginverfyPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginverfyPage),\n  ],\n})\nexport class LoginverfyPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/loginverfy/loginverfy.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams,AlertController} from 'ionic-angular';\n\n//import firebase from 'firebase';\nimport * as firebase from 'firebase'\n\n/**\n * Generated class for the LoginverfyPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-loginverfy',\n  templateUrl: 'loginverfy.html',\n})\nexport class LoginverfyPage {\n\n  //hold recature variable\n  public recaptchaVerifier:firebase.auth.RecaptchaVerifier;\n\n  constructor(public navCtrl: NavController,\n    public alertCtrl:AlertController,\n     public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n\n    console.log('ionViewDidLoad LoginverfyPage');\n  }\n  //signInUser and confirmation\n  signIn(phoneNumber: number){\n\n    const appVerifier = this.recaptchaVerifier;\n    const phoneNumberString = \"+\" + phoneNumber;\n    firebase.auth().signInWithPhoneNumber(phoneNumberString, appVerifier)\n      .then( confirmationResult => {\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        let prompt = this.alertCtrl.create({\n        title: 'Enter the Confirmation code',\n        inputs: [{ name: 'confirmationCode', placeholder: 'Confirmation Code' }],\n        buttons: [\n          { text: 'Cancel',\n            handler: data => { console.log('Cancel clicked'); }\n          },\n          { text: 'Send',\n            handler: data => {\n              confirmationResult.confirm(data.confirmationCode)\n                .then(function (result) {\n                  // User signed in successfully.\n                  console.log(result.user);\n                  // ...\n                }).catch(function (error) {\n                  // User couldn't sign in (bad verification code?)\n                  // ...\n                });\n            }\n          }\n        ]\n      });\n      prompt.present();\n    })\n    .catch(function (error) {\n      console.error(\"SMS not sent\", error);\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/loginverfy/loginverfy.ts"],"sourceRoot":""}